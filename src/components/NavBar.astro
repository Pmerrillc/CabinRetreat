---
import { Icon } from "astro-icon/components";
import LinkButton from "./LinkButton.astro";

import { LODGIFY_URL } from "../consts";

interface Props {
  ligthBackground: boolean;
}

const { ligthBackground } = Astro.props;

const textColor = ligthBackground ? "menu-item-black" : "menu-item-white";
const hamburgerColour = ligthBackground ? "black" : "white";
const buttonColour = ligthBackground ? "secondary" : "primary";
---

<div id="navbar" class:list={["max-page-width"]}>
  <div class:list={["content-container", "page-padding", "max-content-width"]}>
    <div class:list={["logos-container"]}>
      <a href="/">
        <slot name="white-logo" />
        <slot name="black-logo" />
      </a>
      <button id="hamburger">
        <Icon name=`${hamburgerColour}-hamburger` size={32} />
      </button>
    </div>
    <nav class="nav">
      <ul id="menu" class:list={["menu", "page-padding"]}>
        <li>
          <a href="/about" class=`${textColor}`> About </a>
        </li>
        <li>
          <a href="/things-to-do" class=`${textColor}`> Things To Do </a>
        </li>
        <li>
          <a href="/contact-us" class=`${textColor}`> Contact Us </a>
        </li>
        <li>
          <a href="/blog" class=`${textColor}`> Blog </a>
        </li>
        <a class:list={[`${textColor}`, "button"]}>
          <LinkButton
            hideOnDesktop={true}
            link={LODGIFY_URL}
            externalLink={true}
            buttonStyle="secondary"
          >
            Book Now
          </LinkButton>
        </a>
        <button id="close-button"> Close </button>
      </ul>
      <a class:list={["menu-item", "button"]}>
        <LinkButton
          hideOnMobile={true}
          link={LODGIFY_URL}
          externalLink={true}
          buttonStyle={buttonColour}
        >
          Book Now
        </LinkButton>
      </a>
    </nav>
  </div>
</div>

<script>
  const hamburger = document.getElementById("hamburger");
  const closeButton = document.getElementById("close-button");

  if (closeButton) {
    closeButton.addEventListener("click", () => {
      closeMenu();
    });
  }

  if (hamburger) {
    hamburger.addEventListener("click", () => {
      toggleMenu();
    });
  }

  const toggleMenu = () => {
    const menu = document.getElementById("menu");
    if (menu) {
      menu.classList.toggle("active");
    }
  };

  const closeMenu = () => {
    const menu = document.getElementById("menu");
    if (menu) {
      menu.classList.remove("active");
    }
  };
</script>
<style>
  .content-container {
    padding-top: 8px;
    padding-bottom: 8px;
  }

  .logos-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .menu {
    padding-top: 80px;
    padding-bottom: 8px;
    z-index: 1000;
    top: 0;
    right: -800px;
    width: 100%;
    height: 100vh;
    position: fixed;
    display: flex;
    flex-direction: column;
    transition: right 0.4s ease;
    align-items: center;
    gap: 1rem;
    background-color: white;
  }
  .menu-item {
    font-size: 2rem;
    color: black;
  }
  .active {
    width: 100%;
    height: 100vh;
    right: 0;
  }

  #tpd-horizontal-logo {
    font-size: 2rem;
  }

  @media only screen and (min-width: 481px) {
  }

  @media only screen and (min-width: 789px) {
    #tpd-horizontal-logo {
      font-size: 4rem;
    }
    #hamburger {
      display: none;
    }
    #close-button {
      display: none;
    }
    .menu {
      display: flex;
      flex-direction: row;
      position: static;
      width: auto;
      height: auto;
      background-color: inherit;
      padding: inherit;
      gap: 1rem;
    }
    .menu-item-white {
      font-size: 1rem;
      color: white;
    }
    .menu-item-black {
      font-size: 1rem;
      color: black;
    }

    .button {
      align-self: flex-end;
    }

    .nav {
      display: flex;
      justify-content: space-between;
      align-self: flex-end;
      width: 100%;
    }

    .content-container {
      padding-top: 16px;
      padding-bottom: 16px;
      display: flex;
      align-items: start;
      gap: 16px;
    }
  }
</style>
